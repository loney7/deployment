{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/create/create.component.css","webpack:///./src/app/components/create/create.component.html","webpack:///./src/app/components/create/create.component.ts","webpack:///./src/app/components/edit/edit.component.css","webpack:///./src/app/components/edit/edit.component.html","webpack:///./src/app/components/edit/edit.component.ts","webpack:///./src/app/components/home/home.component.css","webpack:///./src/app/components/home/home.component.html","webpack:///./src/app/components/home/home.component.ts","webpack:///./src/app/components/list/list.component.css","webpack:///./src/app/components/list/list.component.html","webpack:///./src/app/components/list/list.component.ts","webpack:///./src/app/todo.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\"","module.exports = \"\\n\\n<div>\\n  <router-outlet>\\n  </router-outlet>\\n</div>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todoApp';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatToolbarModule, MatFormFieldModule, MatInputModule, MatOptionModule, MatSelectModule, MatIconModule, MatButtonModule, MatCardModule, MatTableModule, MatDividerModule, MatSnackBarModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { ListComponent } from './components/list/list.component';\nimport { CreateComponent } from './components/create/create.component';\nimport { EditComponent } from './components/edit/edit.component';\n\nimport { TodoService } from './todo.service';\nimport { HomeComponent } from './components/home/home.component';\n\nconst routes: Routes = [\n  { path: 'create/:userid/:username', component: CreateComponent},\n  { path: 'edit/:username/:id', component: EditComponent},\n  { path: 'list/:username', component: ListComponent},\n  { path: 'home', component: HomeComponent},\n  { path: '', redirectTo: 'home', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ListComponent,\n    CreateComponent,\n    EditComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    HttpClientModule,\n    RouterModule.forRoot(routes),\n    ReactiveFormsModule,\n    MatToolbarModule,\n    MatFormFieldModule,\n    MatInputModule,\n    MatOptionModule,\n    MatSelectModule,\n    MatIconModule,\n    MatButtonModule,\n    MatCardModule,\n    MatTableModule,\n    MatDividerModule,\n    MatSnackBarModule\n  ],\n  providers: [TodoService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }","module.exports = \".create-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n}\"","module.exports = \"<div style=\\\"  position: relative;\\n  margin: auto;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 50%;\\n  height: 100%;\\n  text-align: left;\\\">\\n  <br>\\n  <mat-card style=\\\"background-color: rgb(255, 255, 255, 0.8);\\\">\\n    <section class=\\\"mat-typography\\\">\\n      <h1>Create A New Todo</h1>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"createForm\\\" class=\\\"create-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Todo Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Order\\\" formControlName=\\\"order\\\" #order>\\n      </mat-form-field>\\n      <mat-form-field>\\n          <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n            <mat-option value=\\\"Low\\\">Low</mat-option>\\n            <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n            <mat-option value=\\\"High\\\">High</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <div style=\\\"text-align: right;\\\">\\n      <button mat-raised-button color=\\\"accent\\\" routerLink='{{backRoute}}'>Back</button>&nbsp;\\n      <button type=\\\"submit\\\" (click)=\\\"addTodo(title.value, description.value, order.value, severity.value, userid)\\\" [disabled]=\\\"createForm.pristine || createForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n      </div>\\n    </form>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router, ActivatedRoute } from '@angular/router'; \nimport { TodoService } from '../../todo.service';\n\n@Component({\n  selector: 'app-create',\n  templateUrl: './create.component.html',\n  styleUrls: ['./create.component.css']\n})\nexport class CreateComponent implements OnInit {\n\n  createForm: FormGroup;\n  userid;\n  username;\n  backRoute;\n\n  constructor(private todoService: TodoService, private fb: FormBuilder, private router: Router, private route: ActivatedRoute) {\n    this.createForm = this.fb.group({\n      title: ['', Validators.required],\n      description: '',\n      order: '',\n      severity: ''\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.userid = params.userid;\n      this.username = params.username;\n    });\n    this.backRoute = '/list/'+this.username;\n  }\n\n  addTodo(title, description, order, severity, userid) {\n    this.todoService.addTodo(title, description, order, severity, userid).subscribe(() => {\n      this.router.navigate(['/list/'+this.username]);\n    });\n  }\n\n}","module.exports = \".edit-form {\\n    min-width: 150px;\\n    width: 100%;\\n}\\n\\n.field-full-width {\\n    width: 100%;\\n}\\n\\n.select-fields {\\n    margin: 10px;\\n}\"","module.exports = \"<div style=\\\"  position: relative;\\n  margin: auto;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 50%;\\n  height: 100%;\\n  text-align: left;\\\">\\n  <br>\\n  <mat-card style=\\\"background-color: rgb(255, 255, 255, 0.8);\\\">\\n    <section class=\\\"mat-typography\\\">\\n      <h3>Update Todo</h3>\\n    </section>\\n    <mat-divider></mat-divider>\\n    <br>\\n    <form [formGroup]=\\\"updateForm\\\" class=\\\"edit-form\\\">\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <input matInput placeholder=\\\"Todo Title\\\" formControlName=\\\"title\\\" #title>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Description\\\" formControlName=\\\"description\\\" #description></textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"field-full-width\\\">\\n        <textarea matInput placeholder=\\\"Order\\\" formControlName=\\\"order\\\" #order></textarea>\\n      </mat-form-field>\\n\\n      <mat-form-field class=\\\"select-fields\\\">\\n          <mat-select placeholder=\\\"Severity\\\" formControlName=\\\"severity\\\" #severity>\\n            <mat-option value=\\\"Low\\\">Low</mat-option>\\n            <mat-option value=\\\"Medium\\\">Medium</mat-option>\\n            <mat-option value=\\\"High\\\">High</mat-option>\\n          </mat-select>\\n      </mat-form-field>\\n      <mat-form-field class=\\\"select-fields\\\">\\n        <mat-select placeholder=\\\"Status\\\" formControlName=\\\"status\\\" #status>\\n          <mat-option value=\\\"Open\\\">Open</mat-option>\\n          <mat-option value=\\\"In Progress\\\">In Progress</mat-option>\\n          <mat-option value=\\\"Done\\\">Done</mat-option>\\n        </mat-select>\\n    </mat-form-field>\\n      <mat-divider></mat-divider>\\n      <br><br>\\n      <div style=\\\"text-align: right;\\\">\\n      <button mat-raised-button color=\\\"accent\\\" routerLink=\\\"{{backRoute}}\\\">Back</button>&nbsp;\\n      <button type=\\\"submit\\\" (click)=\\\"updateTodo(title.value, description.value,order.value, severity.value, status.value)\\\" [disabled]=\\\"updateForm.pristine || updateForm.invalid\\\" mat-raised-button color=\\\"primary\\\">Save</button>\\n      </div>\\n    </form>\\n  </mat-card>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\n\nimport { MatSnackBar } from '@angular/material';\n\nimport { TodoService } from '../../todo.service';\nimport { Todo } from '../../todo.model';\n\n@Component({\n  selector: 'app-edit',\n  templateUrl: './edit.component.html',\n  styleUrls: ['./edit.component.css']\n})\nexport class EditComponent implements OnInit {\n\n  id: String;\n  todo: any = {};\n  updateForm: FormGroup;\n  username: String;\n  backRoute: String;\n\n  constructor(private todoService: TodoService, private router: Router, private route: ActivatedRoute, private snackBar: MatSnackBar, private fb: FormBuilder) {\n    this.createForm();\n  }\n\n  createForm() {\n    this.updateForm = this.fb.group({\n      title: ['', Validators.required],\n      description: '',\n      order: '',\n      severity: '',\n      status: ''\n    });\n  }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n      this.id = params.id;\n      this.username = params.username;\n      this.backRoute = '/list/'+this.username;\n      this.todoService.getTodoById(this.id).subscribe(res => {\n        this.todo = res;\n        this.updateForm.get('title').setValue(this.todo.title);\n        this.updateForm.get('description').setValue(this.todo.description);\n        this.updateForm.get('order').setValue(this.todo.order);\n        this.updateForm.get('severity').setValue(this.todo.severity);\n        this.updateForm.get('status').setValue(this.todo.status);\n      });\n    });\n  }\n\n  updateTodo(title, description, order, severity, status) {\n    this.todoService.updateTodo(this.id, title, description, order, severity, status).subscribe(() => {\n      this.snackBar.open('Todo updated successfully', 'OK', {\n        duration: 3000\n      });\n      this.router.navigate([`/list/${this.username}`]);\n    });\n  }\n\n}","module.exports = \".home-form {\\n    max-width: 90%;\\n    margin: 0 auto;\\n}\\n\\ninput {\\n    border-bottom: 2px dashed rgb(75, 75, 75, 0.5);\\n    outline: none;\\n    border-radius: 0;\\n    text-align: center;\\n    background: none;\\n    font-weight: 700;\\n    font-family: 'Lato', georgia;\\n    font-size: 25px;\\n    color: rgb(75, 75, 75);\\n    max-width: 90%;\\n    padding: 1rem;\\n    border-top: none;\\n    border-right: none;\\n    border-left: none;\\n    box-sizing: border-box;\\n    cursor: text;\\n    margin: 10px;\\n  }\\n\\ninput:required {\\n    border-bottom: 2px dashed rgb(75, 75, 75, 0.5);\\n  }\\n\\ninput:focus {\\n    border-bottom: 2px dashed rgb(75, 75, 75);\\n    background-color: rgba(255, 255, 255, 0.2);\\n  }\\n\\ninput:required:valid {\\n    border-bottom: 2px solid rgba(255, 255, 255, 0.2);\\n  }\\n\\ninput:required:invalid {\\n    color: rgba(255, 255, 255, 0.5);\\n  }\\n\\n::-webkit-input-placeholder {\\n    text-align: center;\\n    color: rgb(75, 75, 75, 0.4);\\n    font-style: italic;\\n    font-weight: 400;\\n  }\\n\\n:-ms-input-placeholder {\\n    text-align: center;\\n    color: rgba(255, 255, 255, 0.4);\\n    font-style: italic;\\n    font-weight: 400;\\n  }\\n\\nlabel {\\n    font-weight: 400;\\n    color: rgb(75, 75, 75);\\n  }\\n\\nbutton {\\n      margin: 15px;\\n      background: transparent;\\n      border: 1px solid rgb(75, 75, 75);\\n      color:rgb(75, 75, 75);\\n      padding: 15px 32px;\\n      text-align: center;\\n      text-decoration: none;\\n      display: inline-block;\\n      font-size: 16px;\\n      border-radius: 10px;\\n  }\\n\\nbutton:disabled {\\n    border: 1px solid rgb(75, 75, 75, 0.5);\\n    color: rgba(75, 75, 75, 0.5);\\n  }\\n\\nbutton:disabled:hover {\\n      cursor: not-allowed;\\n  }\\n\\nh4 {\\n      color: white;\\n      margin-top: 5px;\\n       display: block;\\n       opacity: 0.6;\\n  }\"","module.exports = \"<br><br>\\n<h1> Welcome to your Todo App</h1>\\n<div style=\\\"  position: absolute;\\n  margin: auto;\\n  top: 0;\\n  right: 0;\\n  bottom: 0;\\n  left: 0;\\n  width: 1000px;\\n  height: 500px;\\\"><br><br><br><br>\\n<div style=\\\"border:2px solid rgba(75, 75, 75, 0.2); border-radius: 10px; padding: 10px; \\nbackground-color: rgba(255, 255, 255, 0.5);\\\">\\n    <form [formGroup]=\\\"homeForm\\\" class=\\\"home-form\\\">\\n      <label for=\\\"username\\\">Enter your username:</label>\\n      <input name=\\\"username\\\" placeholder=\\\"Username\\\" formControlName=\\\"username\\\" #username><br><br>\\n      <button type=\\\"submit\\\" (click)=\\\"checkUser(username.value)\\\" [disabled]=\\\"homeForm.pristine || homeForm.invalid\\\" color=\\\"primary\\\">Go</button>\\n      <button type=\\\"submit\\\" (click)=\\\"createNewUser(username.value)\\\" [disabled]=\\\"homeForm.pristine || homeForm.invalid\\\" color=\\\"primary\\\">Create new user</button>\\n    </form>\\n</div><br>\\n<h4>(Click on Go if you're an existing user)</h4>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router'; \nimport { TodoService } from '../../todo.service'; \nimport { User } from '../../user.model';\nimport { MatSnackBar } from '@angular/material';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  homeForm: FormGroup;\n\n  constructor(private todoService: TodoService, private fb: FormBuilder, private router: Router, private snackBar: MatSnackBar) {\n    this.homeForm = this.fb.group({\n      username: ['', Validators.required]\n    });\n  }\n\n  \n  checkUser(username) {\n    this.todoService\n      .getUserByUsername(username) // we have user object\n      .subscribe((data) => {\n        if(data[0]) {\n          this.router.navigate(['/list/'+username]);\n        }\n        else {\n          this.snackBar.open('User does not exist', 'OK', {\n            duration: 3000\n          });\n        }\n      });\n    \n  }\n\n  async createNewUser(username) {\n    this.todoService\n      .getUserByUsername(username) // we have user object\n      .subscribe((data) => {\n        if(!data[0]) {\n          this.createUser(username);\n        }\n        else {\n          this.snackBar.open('User already exists', 'OK', {\n            duration: 3000\n          });\n        }\n      });\n  }\n\n  async createUser(username) {\n    await this.todoService.addUser(username).toPromise();\n          this.router.navigate(['/list/'+username]);\n  }\n\n  ngOnInit() {\n  }\n\n}","module.exports = \"table {\\n    width: 100%;\\n}\\n\\nbutton {\\n    margin: 10px;\\n}\\n\\n.mat-table {\\n    border: 1px solid white;\\n    border-radius: 10px;\\n    overflow: hidden;\\n    background-color: rgba(255, 255, 255, 0.4);\\n  }\\n\\n.mat-table td {\\n    vertical-align: middle;\\n    font-size: 15px;\\n    line-height: 1.4;\\n    border-bottom: 1px solid rgba(255, 255, 255, 0.1);\\n    text-align: center;\\n    padding-left: 24px;\\n  }\\n\\n.mat-table th {\\n    vertical-align: middle;\\n    font-size: 17px;\\n    line-height: 1.4;\\n    border-bottom: 1px solid rgb(61, 60, 60, 0.4);\\n    text-align: center;\\n  }\\n  \\n\"","module.exports = \"<div>\\n  <br>\\n    <h2>Hi {{username}}</h2><br>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink=''>Home</button>\\n    <button mat-raised-button color=\\\"primary\\\" routerLink='{{createRoute}}'>Create New Task</button>\\n <br><br>\\n    <div style=\\\"position: relative;\\n    margin: auto;\\n    top: 0;\\n    right: 0;\\n    bottom: 0;\\n    left: 0;\\n    width: 1000px;\\n    height: 500px;\\\">\\n    <table mat-table *ngIf=\\\"todos.length == numOfTasks\\\" [dataSource]=\\\"todos\\\" >\\n      <ng-container matColumnDef=\\\"title\\\">\\n        <th mat-header-cell *matHeaderCellDef>Title</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.title}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"description\\\">\\n        <th mat-header-cell *matHeaderCellDef>Description</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.description}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"order\\\">\\n        <th mat-header-cell *matHeaderCellDef>Order</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.order}}</td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"severity\\\">\\n        <th mat-header-cell *matHeaderCellDef>Severity</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.severity}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"status\\\">\\n        <th mat-header-cell *matHeaderCellDef>Status</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\"> {{element.status}} </td>\\n      </ng-container>\\n\\n      <ng-container matColumnDef=\\\"actions\\\">\\n        <th mat-header-cell *matHeaderCellDef>Actions</th>\\n        <td mat-cell *matCellDef=\\\"let element\\\">\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"editTodo(element._id)\\\">Edit</button>\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"deleteTodo(element._id)\\\">Delete</button>\\n        </td>\\n      </ng-container>\\n\\n      <tr mat-header-row *matHeaderRowDef=\\\"displayedColumns\\\"></tr>\\n      <tr mat-row *matRowDef=\\\"let row; columns: displayedColumns;\\\"></tr>\\n\\n    </table>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { MatTableDataSource } from '@angular/material';\n\nimport { Todo } from '../../todo.model';\nimport { User } from '../../user.model';\nimport { TodoService } from '../../todo.service';\nimport { UseExistingWebDriver } from 'protractor/built/driverProviders';\n\n@Component({\n  selector: 'app-list',\n  templateUrl: './list.component.html',\n  styleUrls: ['./list.component.css']\n})\nexport class ListComponent implements OnInit {\n\n  todos: Todo[];\n  displayedColumns = ['title', 'description', 'order', 'severity', 'status', 'actions'];\n  username;\n  user: User\n  todoids: String[];\n  numOfTasks;\n  createRoute;\n  userId;\n\n  constructor(private todoService: TodoService, private router: Router, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.route.params.subscribe(params => {\n    this.username = params.username;\n  });\n  \n    this.fetchUserByUsername();\n}\n\n  fetchUserByUsername() {\n    this.todos = [];\n    this.todoService\n      .getUserByUsername(this.username) // we have user object\n      .subscribe((data: User) => {\n        this.user = data;\n        this.fetchTodosOfUser();\n      });\n  }\n\n  fetchTodosOfUser() {\n    this.todoids = this.user[0].tasks;\n    this.numOfTasks = this.todoids.length;\n    this.userId = this.user[0]._id;\n    this.createRoute = '/create/'+this.userId+'/'+this.username;\n    this.todoids.forEach(task => {\n      this.todoService\n      .getTodoById(task).subscribe(\n        (data: Todo) => {this.todos.push(data)}\n        );\n    });\n  }\n\n  editTodo(id) {\n    this.router.navigate([`/edit/${this.username}/${id}`]);\n  }\n\n  async deleteTodo(id) {\n   await this.todoService.deleteTodo(id, this.userId)\n    .toPromise();\n    this.fetchUserByUsername();\n  }\n\n}","\nimport { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoService {\n\n  uri = 'http://localhost:4000';\n\n  constructor(private http: HttpClient) { }\n\n  // Get user by username\n  getUserByUsername(username) {\n    return this.http.get(`${this.uri}/users/${username}`);\n  }\n\n  getTodoById(id) {\n    return this.http.get(`${this.uri}/todos/${id}`);\n  }\n\n  addTodo(title, description, order, severity, userid) {\n    const todo = {\n      title: title,\n      description: description,\n      order: order,\n      severity: severity,\n      userid: userid\n    };\n    return this.http.post(`${this.uri}/addtodo`, todo);\n  }\n\n  updateTodo(id, title, description, order, severity, status) {\n    const todo = {\n      title: title,\n      description: description,\n      order: order,\n      severity: severity,\n      status: status\n    };\n    return this.http.post(`${this.uri}/todos/update/${id}`, todo);\n  }\n\n  deleteTodo(id, userid) {\n    return this.http.get(`${this.uri}/todos/delete/${id}/${userid}`);\n  }\n\n  addUser(username) {\n    const user = {\n      username: username\n    };\n    return this.http.post(`${this.uri}/users/add/`, user);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}